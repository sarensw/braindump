import { Parser, NodeProp } from 'lezer';
import { LezerLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@codemirror/highlight';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = Parser.deserialize({
  version: 13,
  states: "!WQYQPOOOhQPO'#CdOOQO'#Ci'#CiOOQO'#Ce'#CeQYQPOOOOQO,59O,59OOyQPO,59OOOQO-E6c-E6cOOQO1G.j1G.j",
  stateData: "![~O[OSPOS~ORQOSQOTQOVPO~ORQOSQOTQOUTOVPO~ORQOSQOTQOUWOVPO~O",
  goto: "u^PPPPPPPP_ePPPoXQOPSUQSOQUPTVSUXROPSU",
  nodeNames: "âš  LineComment Program Identifier Heading Boolean ) ( Application",
  maxTerm: 13,
  nodeProps: [
    [NodeProp.openedBy, 6,"("],
    [NodeProp.closedBy, 7,")"]
  ],
  skippedNodes: [0,1],
  repeatNodeCount: 1,
  tokenData: "$y~RYXYqYZq]^qpqqst!Sxy#Qyz#V!P!Q#[!]!^$Y!}#O$e~vS[~XYqYZq]^qpqq~!VUpq!i}!O!i!Q![!i!c!}!i#R#S!i#T#o!i~!nUS~pq!i}!O!i!Q![!i!c!}!i#R#S!i#T#o!i~#VOV~~#[OU~~#_P!P!Q#b~#eT}!O#t!Q![#t!c!}#t#R#S#t#T#o#t~#yTR~}!O#t!Q![#t!c!}#t#R#S#t#T#o#t~$_QP~OY$YZ~$Y~$hQpq$n#l#m$n~$qP#P#Q$t~$yOT~",
  tokenizers: [0],
  topRules: {"Program":[0,2]},
  tokenPrec: 0
});

const BraindownLanguage = LezerLanguage.define({
    parser: parser.configure({
        props: [
            indentNodeProp.add({
                Application: delimitedIndent({ closing: ')', align: false })
            }),
            foldNodeProp.add({
                Application: foldInside
            }),
            styleTags({
                Identifier: tags.variableName,
                Boolean: tags.bool,
                Heading: tags.labelName,
                '( )': tags.paren
            })
        ]
    }),
    languageData: {
        commentTokens: { line: ';' }
    }
});
function Braindown() {
    return new LanguageSupport(BraindownLanguage);
}

export { Braindown, BraindownLanguage };
